/* getInt: 获取[n,m]之间的随机整数，包含n和m
 *  @params
 *    n [number] 区间左界限
 *    m [number] 区间右界限
 *  @return
 *    [number] [n,m]中的某一个整数
 * by Zry on 20230930
 *
 */
export const getInt = function (n, m) {
  return Math.floor(Math.random() * (m - n + 1)) + n;
};

/* unique: 数组去重
 *  @params
 *    arr [Array] 要去重的数组
 *  @return
 *    [Array] 去重后的数组
 * by Zry on 20231002
 *
 */
export const unique = function (arr) {
  let obj = {};
  for (let i = 0; i < arr.length; i++) {
    let item = arr[i];
    if (obj[item] !== undefined) {
      arr[i] = arr[arr.length - 1];
      arr.length--;
      i--;
      continue;
    }
    obj[item] = item;
  }
  return arr;
}

/* formartDate：格式化日期为「xxxx年xx月xx日 xx时xx分xx秒」的格式
 *   @params
 *      TIME [Date] 要格式化的日期
 *   @return
 *      [Date] 格式化后的日期
 * by Zry on 20231002
 */
/* addZero：不足两位，首位补零
 *   @params
 *      time [string | number] 要格式化的数值
 *   @return
 *      [number] 格式化后的数值
 * by Zry on 20231002
 */
export const formartDate = function (TIME) {
  const addZero = (val) => (val.length < 2 ? "0" + val : val);
  /* 获取年月日时分秒 */
  let timeArr = TIME.split(/(?:\.| |\/|-|\\|:)/g);
  let date =
    timeArr[0] +
    "年" +
    addZero(timeArr[1]) +
    "月" +
    addZero(timeArr[2]) +
    "日" +
    " " +
    addZero(timeArr[3]) +
    "时" +
    addZero(timeArr[4]) +
    "分" +
    addZero(timeArr[5]) +
    "秒";
  return date;
};
