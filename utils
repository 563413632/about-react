/* getInt: 获取[n,m]之间的随机整数，包含n和m
 *  @params
 *    n [number] 区间左界限
 *    m [number] 区间右界限
 *  @return
 *    [number] [n,m]中的某一个整数
 * by Zry on 20230930
 *
 */
export const getInt = function (n, m) {
  return Math.floor(Math.random() * (m - n + 1)) + n;
};

/* unique: 数组去重
 *  @params
 *    arr [Array] 要去重的数组
 *  @return
 *    [Array] 去重后的数组
 * by Zry on 20231002
 *
 */
export const unique = function (arr) {
  let obj = {};
  for (let i = 0; i < arr.length; i++) {
    let item = arr[i];
    if (obj[item] !== undefined) {
      arr[i] = arr[arr.length - 1];
      arr.length--;
      i--;
      continue;
    }
    obj[item] = item;
  }
  return arr;
}

/* formatTime：格式化日期为「xxxx年xx月xx日 xx时xx分xx秒」的格式
 *   @params
 *      TIME [Date] 要格式化的日期
 *   @return
 *      [Date] 格式化后的日期
 * by Zry on 20231002
 */
export const formatTime = function (TIME) {
  /* 获取日期的分隔符 */
  let sign = TIME.match(/\D/);
  /* 格式化年月日 */
  let date = TIME.split(" ");
  let tempDate = date[0].split(sign);
  let year = formatDate(tempDate[0]);
  let mouth = formatDate(tempDate[1]);
  let day = formatDate(tempDate[2]);
  /* 格式化时分秒 */
  tempDate = date[1].split(":");
  let hour = formatDate(tempDate[0]);
  let minute = formatDate(tempDate[1]);
  let second = formatDate(tempDate[2]);
  /* 格式化Date */
  date =
    "" +
    year +
    "年" +
    mouth +
    "月" +
    day +
    "日" +
    " " +
    hour +
    "时" +
    minute +
    "分" +
    second +
    "秒";
  /* formatDate：格式化小于10的数为0开头的格式的方法
   *   @params
   *      time [string | number] 要格式化的数值
   *   @return
   *      [number] 格式化后的数值
   * by Zry on 20231002
   */
  function formatDate(time) {
    //去除首位的0
    time = Number(time);
    time = +time < 10 ? "0" + time : time;
    return time;
  }
}
